В сегодняшней работе требуется написать ещё одну реализацию интерфейса из прошлого дз, но с дополнительными методами.

Необходимо:

1. Написать вторую реализацию интерфейса списка (скопировать и скорректировать первую) из прошлого дз, но "подогнать" под работу с целыми числами (int).
2. Добавить в реализацию приватный метод с самой быстрой из рассмотренных сортировок.

    Для выявления самой быстрой их следует сравнить по времени выполнения на случайно сгенерированном массиве с 100_000 элементов.

    Замерить можно следующим кодом:

    ```java
    long start = System.currentTimeMillis();
    ваш_метод_сортировки(arr);
    System.out.println(System.currentTimeMillis() - start);
    ```

    Учесть, что для сравнения сортировок нужно использовать 3 разные копии массива, т.к. сортировать уже отсортированный ранее массив некорректно.

    Код самого сравнения прикладывать по желанию.

3. Добавить в реализацию приватный метод бинарного поиска.

    Учесть, что метод contains уже был реализован в прошлом дз.

    Его следует переработать, осуществив сортировку (реализованную в шаге 2) и вызвав метод бинарного поиска.

    Подсказки:

    1. Сгенерировать массив можно с помощью кода из дз по массивам.
    2. После генерации требуется сделать копию массива через Arrays.copyOf для использования в других сортировках.